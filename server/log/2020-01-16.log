2020-01-16 15:33:26 - Starting App on DESKTOP-T7EOC95 with PID 7656 (C:\Springlibrary\springLibrary\server\target\classes started by haiam in C:\Springlibrary\springLibrary)
2020-01-16 15:33:26 - No active profile set, falling back to default profiles: default
2020-01-16 15:33:27 - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@59212d31: startup date [Thu Jan 16 15:33:27 EET 2020]; root of context hierarchy
2020-01-16 15:33:28 - Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$baed857a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-01-16 15:33:28 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f481c74c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-01-16 15:33:28 - Tomcat initialized with port(s): 8080 (http)
2020-01-16 15:33:28 - Initializing ProtocolHandler ["http-nio-8080"]
2020-01-16 15:33:28 - Starting service [Tomcat]
2020-01-16 15:33:28 - Starting Servlet Engine: Apache Tomcat/8.5.28
2020-01-16 15:33:28 - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_171\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_171\bin;C:\maven\bin;C:\maven\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\WINDOWS\System32\OpenSSH\;C:\PostgreSQL\pg10\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Users\haiam\AppData\Local\Programs\Python\Python37-32\Scripts\;C:\Users\haiam\AppData\Local\Programs\Python\Python37-32\;C:\Users\haiam\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;C:\Users\haiam\AppData\Roaming\npm;C:\Users\haiam\AppData\Local\GitHubDesktop\bin;C:\Users\haiam\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\Docker Toolbox;.]
2020-01-16 15:33:28 - Initializing Spring embedded WebApplicationContext
2020-01-16 15:33:28 - Root WebApplicationContext: initialization completed in 1778 ms
2020-01-16 15:33:28 - Servlet dispatcherServlet mapped to [/]
2020-01-16 15:33:28 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-16 15:33:28 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-16 15:33:28 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-16 15:33:28 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-16 15:33:29 - HikariPool-1 - Starting...
2020-01-16 15:33:29 - HikariPool-1 - Start completed.
2020-01-16 15:33:29 - Building JPA container EntityManagerFactory for persistence unit 'default'
2020-01-16 15:33:29 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-01-16 15:33:29 - HHH000412: Hibernate Core {5.2.10.Final}
2020-01-16 15:33:29 - HHH000206: hibernate.properties not found
2020-01-16 15:33:29 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-01-16 15:33:30 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-01-16 15:33:30 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-01-16 15:33:31 - HHH000397: Using ASTQueryTranslatorFactory
2020-01-16 15:33:31 - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@59212d31: startup date [Thu Jan 16 15:33:27 EET 2020]; root of context hierarchy
2020-01-16 15:33:31 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-01-16 15:33:31 - Mapped "{[/author/delete],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> springLibrary.controller.AuthorController.delete(springLibrary.model.request.AuthorRequest)
2020-01-16 15:33:31 - Mapped "{[/addauthor/save],methods=[POST]}" onto org.springframework.http.ResponseEntity<?> springLibrary.controller.AuthorController.save(springLibrary.model.request.AuthorRequest)
2020-01-16 15:33:31 - Mapped "{[/author/findbycharacter],methods=[GET]}" onto public java.util.List<springLibrary.model.response.AuthorResponse> springLibrary.controller.AuthorController.getAuthorByCharacter(java.lang.String)
2020-01-16 15:33:31 - Mapped "{[/author/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<?> springLibrary.controller.AuthorController.getAuthorById(java.lang.Long)
2020-01-16 15:33:31 - Mapped "{[/author/findbyname],methods=[GET]}" onto public java.util.List<springLibrary.model.response.AuthorResponse> springLibrary.controller.AuthorController.getAuthorsByName(java.lang.String)
2020-01-16 15:33:31 - Mapped "{[/authors],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<springLibrary.model.response.AuthorResponse>> springLibrary.controller.AuthorController.authors()
2020-01-16 15:33:31 - Mapped "{[/book/delete],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> springLibrary.controller.BookController.delete(springLibrary.model.request.BookRequest)
2020-01-16 15:33:31 - Mapped "{[/books/save],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> springLibrary.controller.BookController.save(springLibrary.model.request.BookRequest)
2020-01-16 15:33:31 - Mapped "{[/books/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<?> springLibrary.controller.BookController.configure(java.lang.Long)
2020-01-16 15:33:31 - Mapped "{[/book/findbycharacter],methods=[GET]}" onto public java.util.List<springLibrary.model.response.BookResponse> springLibrary.controller.BookController.getBookByCharacter(java.lang.String)
2020-01-16 15:33:31 - Mapped "{[/getbypublisher/{id}],methods=[GET]}" onto public java.util.List<springLibrary.model.response.BookResponse> springLibrary.controller.BookController.getBooksByPublisher(java.lang.Long)
2020-01-16 15:33:31 - Mapped "{[/getbygenre/{id}],methods=[GET]}" onto public java.util.List<springLibrary.model.response.BookResponse> springLibrary.controller.BookController.findByGenreBooks(java.lang.Long)
2020-01-16 15:33:31 - Mapped "{[/getbyauthor/{id}],methods=[GET]}" onto public java.util.List<springLibrary.model.response.BookResponse> springLibrary.controller.BookController.getBooksByAuthor(java.lang.Long)
2020-01-16 15:33:31 - Mapped "{[/book/findbyname],methods=[GET]}" onto public java.util.List<springLibrary.entities.Book> springLibrary.controller.BookController.getBookByName()
2020-01-16 15:33:31 - Mapped "{[/books],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<springLibrary.model.response.BookResponse>> springLibrary.controller.BookController.books()
2020-01-16 15:33:31 - Mapped "{[/book/findbycriteria],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.List<springLibrary.model.response.BookResponse>> springLibrary.controller.BookController.findBooks(springLibrary.model.request.CriteriaRequest)
2020-01-16 15:33:31 - Mapped "{[/genre/delete],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> springLibrary.controller.GenreController.delete(springLibrary.model.request.GenreRequest)
2020-01-16 15:33:31 - Mapped "{[/addgenre/save],methods=[POST]}" onto org.springframework.http.ResponseEntity<?> springLibrary.controller.GenreController.save(springLibrary.model.request.GenreRequest)
2020-01-16 15:33:31 - Mapped "{[/genre/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<?> springLibrary.controller.GenreController.configure(java.lang.Long)
2020-01-16 15:33:31 - Mapped "{[/booksbygenres],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<springLibrary.model.response.GenreResponse>> springLibrary.controller.GenreController.genres()
2020-01-16 15:33:31 - Mapped "{[/publisher/delete],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> springLibrary.controller.PublisherController.delete(springLibrary.model.request.PublisherRequest)
2020-01-16 15:33:31 - Mapped "{[/addpublisher/save],methods=[POST]}" onto org.springframework.http.ResponseEntity<?> springLibrary.controller.PublisherController.save(springLibrary.model.request.PublisherRequest)
2020-01-16 15:33:31 - Mapped "{[/publisher/{id}],methods=[GET]}" onto public org.springframework.http.ResponseEntity<?> springLibrary.controller.PublisherController.configure(java.lang.Long)
2020-01-16 15:33:31 - Mapped "{[/publisher/findbycharacter],methods=[GET]}" onto public java.util.List<springLibrary.model.response.PublisherResponse> springLibrary.controller.PublisherController.getPublisherByCharacter(java.lang.String)
2020-01-16 15:33:31 - Mapped "{[/publisher/findbycriteria],methods=[POST]}" onto public org.springframework.http.ResponseEntity<java.util.List<springLibrary.model.response.PublisherResponse>> springLibrary.controller.PublisherController.findPublishers(springLibrary.model.request.PublisherSearchCreateria)
2020-01-16 15:33:31 - Mapped "{[/booksbypublisher],methods=[GET]}" onto public org.springframework.http.ResponseEntity<java.util.List<springLibrary.model.response.PublisherResponse>> springLibrary.controller.PublisherController.publishers()
2020-01-16 15:33:31 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-16 15:33:31 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-16 15:33:31 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-16 15:33:31 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-16 15:33:31 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-16 15:33:31 - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2020-01-16 15:33:32 - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@59212d31: startup date [Thu Jan 16 15:33:27 EET 2020]; root of context hierarchy] and template loader path [classpath:/templates/]
2020-01-16 15:33:32 - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2020-01-16 15:33:32 - Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.checkTemplateLocation=false)
2020-01-16 15:33:32 - LiveReload server is running on port 35729
2020-01-16 15:33:32 - Registering beans for JMX exposure on startup
2020-01-16 15:33:32 - Bean with name 'dataSource' has been autodetected for JMX exposure
2020-01-16 15:33:32 - Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2020-01-16 15:33:32 - Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2020-01-16 15:33:32 - Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2020-01-16 15:33:32 - Starting beans in phase 2147483647
2020-01-16 15:33:32 - Starting ProtocolHandler ["http-nio-8080"]
2020-01-16 15:33:32 - Using a shared selector for servlet write/read
2020-01-16 15:33:32 - Tomcat started on port(s): 8080 (http) with context path ''
2020-01-16 15:33:32 - Started App in 6.115 seconds (JVM running for 9.343)
2020-01-16 15:34:46 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-16 15:34:46 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-16 15:34:46 - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2020-01-16 15:52:02 - criteriaRequest.toString() = CriteriaRequest{searchWord='Спроба', type='null'}
2020-01-16 15:52:08 - criteriaRequest.toString() = CriteriaRequest{searchWord='Буквар', type='null'}
2020-01-16 15:52:17 - criteriaRequest.toString() = CriteriaRequest{searchWord='Add', type='null'}
2020-01-16 16:01:50 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='Гедавництво', findByCity=true}
2020-01-16 16:06:31 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='book', findByCity=true}
2020-01-16 16:06:59 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='book', findByCity=false}
2020-01-16 16:07:22 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='видавнтцтво', findByCity=false}
2020-01-16 16:08:03 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='Видавництво', findByCity=false}
2020-01-16 16:08:18 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='book', findByCity=false}
2020-01-16 16:08:21 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='Видавництво', findByCity=false}
2020-01-16 16:08:27 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='видавництво', findByCity=false}
2020-01-16 16:08:28 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='видавництво', findByCity=false}
2020-01-16 16:08:34 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='гедавництво', findByCity=false}
2020-01-16 16:08:49 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='дедавництво', findByCity=false}
2020-01-16 16:12:39 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='дедавництво', findByCity=true}
2020-01-16 16:49:22 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='Kharkiv', findByCity=true}
2020-01-16 16:53:10 - ==============why are you not working ======================== 
2020-01-16 17:10:57 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 20', type='null'}
2020-01-16 17:11:05 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів', type='null'}
2020-01-16 17:11:05 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів', type='null'}
2020-01-16 17:11:17 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 20', type='null'}
2020-01-16 17:11:28 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба', type='null'}
2020-01-16 17:12:00 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба', type='null'}
2020-01-16 17:12:15 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 20', type='null'}
2020-01-16 17:12:28 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 20', type='null'}
2020-01-16 17:12:31 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 20', type='null'}
2020-01-16 17:15:50 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 20', type='null'}
2020-01-16 17:16:44 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:16:45 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:16:45 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:16:46 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:16:46 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:16:46 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:16:46 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:16:47 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:16:57 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:14 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:15 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:15 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:16 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:16 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:16 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:16 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:17 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:19 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:19 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:20 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:20 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:20 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:20 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:21 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:21 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:21 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:21 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:21 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:22 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:22 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:28 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:29 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:29 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:29 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:35 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:40 - criteriaRequest.toString() = CriteriaRequest{searchWord='буквар', type='null'}
2020-01-16 17:17:44 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:17:50 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба', type='null'}
2020-01-16 17:17:51 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба', type='null'}
2020-01-16 17:17:52 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба', type='null'}
2020-01-16 17:17:52 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба', type='null'}
2020-01-16 17:17:55 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба', type='null'}
2020-01-16 17:17:56 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба', type='null'}
2020-01-16 17:17:57 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба', type='null'}
2020-01-16 17:17:58 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба', type='null'}
2020-01-16 17:17:58 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба', type='null'}
2020-01-16 17:17:58 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба', type='null'}
2020-01-16 17:17:59 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба', type='null'}
2020-01-16 17:18:04 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба', type='null'}
2020-01-16 17:18:04 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба', type='null'}
2020-01-16 17:18:05 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба', type='null'}
2020-01-16 17:18:05 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба', type='null'}
2020-01-16 17:18:24 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 26 ', type='null'}
2020-01-16 17:18:35 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба', type='null'}
2020-01-16 17:19:05 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 26', type='null'}
2020-01-16 17:19:08 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 26', type='null'}
2020-01-16 17:19:09 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 26', type='null'}
2020-01-16 17:19:31 - criteriaRequest.toString() = CriteriaRequest{searchWord='зберегти авторів 26', type='null'}
2020-01-16 17:19:42 - criteriaRequest.toString() = CriteriaRequest{searchWord='зберегти автіорів 26', type='null'}
2020-01-16 17:19:53 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:01 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:02 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:03 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:03 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:03 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:04 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:04 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:04 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:05 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:22 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:32 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:32 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:33 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:33 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:33 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:34 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:34 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:34 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:34 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:35 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:35 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:35 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:35 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:36 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:36 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:36 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:36 - criteriaRequest.toString() = CriteriaRequest{searchWord=' спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:43 - criteriaRequest.toString() = CriteriaRequest{searchWord='спроба зберегти авторів 26', type='null'}
2020-01-16 17:20:46 - criteriaRequest.toString() = CriteriaRequest{searchWord='проба зберегти авторів 26', type='null'}
2020-01-16 17:20:46 - criteriaRequest.toString() = CriteriaRequest{searchWord='проба зберегти авторів 26', type='null'}
2020-01-16 17:20:46 - criteriaRequest.toString() = CriteriaRequest{searchWord='проба зберегти авторів 26', type='null'}
2020-01-16 17:20:50 - criteriaRequest.toString() = CriteriaRequest{searchWord='проба зберегти авторів', type='null'}
2020-01-16 17:20:57 - criteriaRequest.toString() = CriteriaRequest{searchWord='проба зберегти авторів 26', type='null'}
2020-01-16 17:22:33 - criteriaRequest.toString() = CriteriaRequest{searchWord='Контрольне додавання книжки', type='null'}
2020-01-16 17:23:28 - criteriaRequest.toString() = CriteriaRequest{searchWord='Абетка', type='null'}
2020-01-16 18:20:35 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='book', findByCity=true}
2020-01-16 18:20:47 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='book', findByCity=false}
2020-01-16 18:20:59 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='гедавництво', findByCity=false}
2020-01-16 18:21:04 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='дедавництво', findByCity=false}
2020-01-16 18:21:30 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='Kharkiv', findByCity=true}
2020-01-16 18:24:24 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='Kharkiv', findByCity=true}
2020-01-16 18:24:50 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='дедавництво', findByCity=false}
2020-01-16 18:25:01 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='kharkiv', findByCity=true}
2020-01-16 18:25:10 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='kharkiv', findByCity=true}
2020-01-16 18:25:16 - publisherSearchCreateria.toString() = PublisherSearchCreateria{searchWord='kharkiv', findByCity=true}
2020-01-16 19:13:52 - ==============why are you not working ======================== 
2020-01-16 19:13:57 - ==============why are you not working ======================== 
2020-01-16 20:59:55 - ==============why are you not working ======================== 
